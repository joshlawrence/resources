# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
# commandlinefu.com by David Winterbottom
%
# encrypt sensitive image using password
echo pa33w0rd | convert sensitive.jpg -encipher - -depth 8 png24:hidden.png
%
# Convert wma to mp3@128k
for f in *.wma; do ffmpeg -i "$f" -ab 128k "${f%.wma}.mp3" -ab 128K; done
%
# Kick user
killall -u username
%
# Create strong, but easy to remember password
read -s pass; echo $pass | md5sum | base64 | cut -c -16
%
# capture selected window
scrot -s /tmp/file.png
%
# Cat files in a directory; for loop command
for i in $(ls); do printf %b \\033c; cat $i; sleep .3; done
%
# create thumbnail of pdf
convert -resize 200 awk.pdf[0] awk.png
%
# capture selected window
import -window `xwininfo | awk '/Window id/{print $4; exit}'` `uuidgen`.png
%
# save man-page as pdf
man -t awk | ps2pdf - awk.pdf
%
# Remove dashes in UUID
UUID="63b726a0-4c59-45e4-af65-bced5d268456"; echo ${UUID//-/}
%
# Find all files larger than 500M and less than 1GB
find / -type f -size +500M -size -1G
%
# Script Terminal Session
script -f /tmp/foo; tail -f /tmp/foo
%
# Check for running service by name and kill it if there are more than one.
[ $(ps -Af|grep Tomcat|wc -l) != 1 ] && ps -Af|grep Tomcat| awk '{print $2}'| xargs kill -9
%
# Copy/move a bunch of files to dot files and back
for f in *.txt; do cp $f .$f; done;
%
# Change the terminal  foreground color
tput setf 4
%
# sort ip by count quickly with awk from apache logs
awk '{array[$1]++}END{ for (ip in array) print array[ip] " " ip}' <path/to/apache/*.log> | sort -n
%
# Limit the cpu usage of a process
sudo cpulimit -p pid -l 50
%
# Prints "hello, world" to the console in very large letters
paste <(banner hello,\ ) <(banner world)
%
# Encryption file in commad line
gpg -c <filename>
%
# Show bandwidth use oneliner
while true; do cat /proc/net/dev; sleep 1; done | awk -v dc="date \"+%T\"" '/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++) printf "%s %8.2f KiB/s in %8.2f KiB/s out\n", d, i/1024, o/1024}'
%
# Get the name or user running the process of specified PID
ps -p pid -o logname |tail -1
%
# diff current vi buffer edits against original file
:w !diff -u % -
%
# Save a file you edited in vim without the needed permissions
:w!
%
# Generate a random password 30 characters long
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
%
# Remove slashes in UUID
python -c "from uuid import UUID; print UUID('63b726a0-4c59-45e4-af65-bced5d268456').hex;"
%
