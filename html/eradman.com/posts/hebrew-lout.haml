%h1 Multiple ISO-8859 Encodings in Lout

%p
  Before you start, keep in mind the following:

%ol
  %li
    X11, Lout, GhostScript, and PSUtils all look for Type1 fonts in different
    locations and use unrelated configureation.
  %li
    You need the <em>.pfa</em> (font outlines) and <em>.afm</em> (font
    metrics). FontForge can save the metrics file when you generate the fonts.
  %li
    The 8-bit encodings are intended only for modern dialects, and do not have
    native support for combined characters, ancient accents and other notations.
  %li
    If you want to distribute a postscript document with new fonts, every page
    must have them embedded with <em>includeres</em>.
  %li
    Don't use <em>@Font</em> adjustments in the body of the document directly,
    wrap it with a macro so it can be easily tweaked and read.

%h2 Latin, Greek and Hebrew

%p
  Most fonts distributed today are Unicode fonts. Lout only uses 8-bit
  character sets, but it is still possible to include languages that use multiple
  encodings in the same source.

%p
  Efraim Yawitz <a
  href="http://lists.planix.com/pipermail/lout-users/attachments/20010207/f5ccb314/heblout.tar.obj">posted</a>
  some macros and the David font that are very useful for this, including new
  macros <em>@RLFill</em> and <em>LRFill</em>. Put these macros in a file called
  <em>mydefs</em> in your working directory and it will work fine for simple
  functions. There are a lot of extra glyphs in the David typeface that exclude
  the Latin character set, so use care if you choose to use them in Lout--you are
  essentially creating an ad-hoc encoding. In these examples I don't use
  right-to-left editing, I typed them in display order.

%p.center
  <img src="../library/hebrew-lout/hebrew8.png" alt="David font glyps" width="551" height="508" />

%p
  The simplified Greek font that I use are the Type 1 scalable Greek (ISO
  8859-7) distributed by <a
  href="ftp://ftp.redhat.com/pub/redhat/linux/7.3/en/os/i386/SRPMS/fonts-ISO8859-7-1.0-2.src.rpm">Red
  Hat</a>. Lout and GhostScript will die when using fonts that aren't encoded in
  a specific way, so use <a
  href="http://fontforge.sourceforge.net/">FontForge</a> to re-encode them with
  the specific ISO-8859- character set.

  <p class="center"><img src="../library/hebrew-lout/greek8.png" alt="Greek Times
  glyphs" width="551" height="411" />

%h2 Building and Previewing

%p
  Makefiles make managing compiled source much easier, and text processing is
  no exception. Start by defining some paths specific to your system:

:codeblock
  :::make
  GS_FONTS=/usr/local/share/ghostscript/fonts
  PS_UTILS=/usr/local/share/psutils
  WD=`pwd`

%p
  Make sure Lout knows that there are fonts in the current directory with
  <em>-F</em> so it doesn't complain.

:codeblock
  :::make
  all: mixed-8859.ps
          lout -F ${WD} mixed-8859 > mixed-8859.ps

  pre: mixed-8859.ps
          gv mixed-8859.ps

  mixed-8859.ps:
          lout -F ${WD} mixed-8859 > mixed-8859.ps

%p
  Before you can distribute a document with unusual fonts you must embed them
  with the utility <em>includeres</em>. This makes the file size huge, but as
  Valeriy E. Ushakov <a
  href="http://snark.ptc.spbu.ru/~uwe/lout/essays/1365.fonts.txt">explains</a>,
  page independence dictates that each page is not dependent on definitions in
  previous pages.

%p
  Instead of copying the fonts to multiple places, I use a symbolic link from
  GhostScript's font directory to PSUtils.

:codeblock
  :::make
  install:
          cp davidy.afm davidy.pfa ${GS_FONTS}
          ln -fs ${GS_FONTS}/davidy.pfa ${PS_UTILS}/David
          cp grktimp.afm grktimp.pfa ${GS_FONTS}
          ln -fs ${GS_FONTS}/grktimp.pfa ${PS_UTILS}/Greek-TimesPlain

  uninstall:
          rm ${PS_UTILS}/David
          rm ${GS_FONTS}/davidy.pfa ${GS_FONTS}/davidy.afm
          rm ${PS_UTILS}/Greek-TimesPlain
          rm ${GS_FONTS}/grktimp.pfa ${GS_FONTS}/grktimp.afm

  final:
          includeres mixed-8859.ps  > output.ps

%p
  And make sure to clean up anything you don't want.

:codeblock
  :::make
  clean:
          rm -f mixed-8859.ps *.li *.ldx *.lix mixed-8859.ld output.ps XftCache fonts.*

%p
  Finally, create a file called <em>Fontmap</em> and put in the definitions
  for which <em>gs</em> and related utilities can read to find out what a font
  name means.

:codeblock
  /DaviD  (davidy.pfa);
  /Greek-TimesPlain  (grktimp.pfa);

%h2 Telling Lout about New Fonts

%p
  Instead of putting font definitions in <em>mydefs</em>, I create a new
  library with the Lout <em>FontDef</em> statements in it called
  <em>custom.fd.ld:</em>

:codeblock
  :::lout
  {@FontDef
          @Tag {David-Base}
          @Face {Base}
          @Family {David}
          @Name {David}
          @Metrics {davidy.afm}
          @Mapping {Latin1.LCM}
  }
  {@FontDef
          @Tag {Greek-Base}
          @Face {Base}
          @Family {Greek}
          @Name {Greek-TimesPlain}
          @Metrics {grktimp.afm}
          @Mapping {Latin1.LCM}
  }


%p
  Notice how these parameters match the labels in the font metrics files:

:codeblock
  $ grep Name *.afm
  davidy.afm:FontName David
  davidy.afm:FullName David
  davidy.afm:FamilyName David
  grktimp.afm:FontName Greek-TimesPlain
  grktimp.afm:FullName Greek Times Plain
  grktimp.afm:FamilyName Greek Times

%p
  Now at the end of <em>mydoc</em> (or whatever your custom document parameter
  file is), included a reference to it:

:codeblock
  :::lout
  @Database @FontDef { custom.fd }


%p
  A few basic macros make the interjection of these new languages very smooth.
  Here I used <em>@H</em> and <em>@G</em> to change fonts, and <em>@N</em> to put
  in margin notes.

:codeblock
  :::lout
  @Include{mydoc}
  macro @H{{David Base +1p} @Font}
  macro @G{{Greek Base +1p} @Font}
  macro @N{@I @OuterNote}
  @Doc
  @Text{

  }


%p
  The output presented in <em>gv</em> is very sharp.  This screen-shot is of
  X.org 7.2 with <em>hintingstyle</em> set to <em>hintfull</em> in
  <em>~/.fonts.conf</em>.

  <p class="center"><img src="../library/hebrew-lout/typeset-page.png" alt="Typeset Page" width="549" height="227" />

%h2 Encodings in VIM

%p
  Sometimes it's helpful to set up some shortcuts for changing encoding.

:codeblock
  :::vim
  map _u :set encoding=utf-8
  map _1 :set encoding=iso-8859-1
  map _7 :set encoding=iso-8859-7
  map _8 :set encoding=iso-8859-8

%p
  Once you have the right terminal emulation and encoding use the
  <em>:digraphs</em> command to see the available characters and the keystrokes
  for producing them. <em>Ctrl+K</em> will enable you to type any one of these
  sequences without a special keyboard map.

  <p class="center"><img src="../library/hebrew-lout/8859-8-digraphs.png"
  alt="ISO-8859-8 digraphs in VIM" width="734" height="374" />

%h2 Changing Terminal Fonts

%p
  The easiest way to switch fonts is with <em>mlterm</em>, then define some
  keyboard shortcuts in <em>.mlterm/key</em>.

:codeblock
  Control+F1="proto:encoding=iso8859-1"
  Control+F7="proto:encoding=iso8859-7"
  Control+F8="proto:encoding=iso8859-8"
  Control+F12="proto:encoding=utf-8"

%p
  Setting the encoding in VIM gives easy access to the digigraph table, but
  the current font will determine how the characters look. <em>mlterm</em> will
  default to Latin1.

%p.center
  <img src="/library/hebrew-lout/editor-latin1.png" alt="vim running in mlterm" width="734" height="374" />

