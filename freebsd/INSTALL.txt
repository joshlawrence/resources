# -- FREEBSD INSTALL NOTES -- #

scratch install notes for a fresh freebsd install.

UPDATE 2021-04-27: freebsd 13 is out!  WOO-HOO!

## INSTALL

do the install, use "root on zfs", don't bother with src or ports.  add yourself to the wheel and operator groups.

on boot:
    freebsd-update fetch
    freebsd-update install

bootstrap the pkg utility:
    pkg bootstrap

move to the latest pkg repo:
    copy /etc/pkg/FreeBSD.conf to /usr/local/etc/pkg/repos/FreeBSD.conf
    change quarterly to latest
    pkg update -f
    pkg upgrade

enable pf:
    https://www.freebsd.org/doc/handbook/firewalls-pf.html
    add to /etc/pf.conf:
        set skip on lo0
        block in all
        pass in proto tcp to port { 22 }
        pass out all keep state
    touch /var/log/pf.log
    sysrc pf_enable=YES
    sysrc pf_flags=""
    sysrc pf_rules="/etc/pf.conf"
    sysrc pflog_enable=YES
    sysrc pflog_flags=""
    sysrc pflog_logfile="/var/log/pf.log"

packages:
    pkg install nano bash bash-completion tmux irssi lynx wget curl vim-console sudo rsync git python3 en-freebsd-doc devcpu-data ripgrep

power management:
    https://vermaden.wordpress.com/2018/11/28/the-power-to-serve-freebsd-power-management/
    pkg install powerdxx
    /etc/rc.conf:
    sysrc powerdxx_enable="YES"
    sysrc powerdxx_flags="-n adaptive -a hiadaptive -b adaptive -m 800 -M 1600"

    "For CPU scaling feature you may use the powerd(8) daemon available in the FreeBSD base system or powerdxx(8) from the FreeBSD Ports or packages. The powerdxx(8) daemon aims to better scale multicore systems and not turning all cores to high state when there is moderate load on the system but some people may prefer that approach to have full power available when they do anything and to save power when they do nothing. Thus powerd(8) is not better then powerdxx(8) or vice versa. They are just different so that gives you more options for your needs."

no need to edit /etc/login.conf anymore, fbsd13 has it by default.

some packages for graphics:
    pkg install drm-kmod
    sysrc kld_list="/boot/modules/i915kms.ko"
    reboot

intel CPU microcode:
    pkg install devcpu-data
    /boot/loader.conf:
    cpu_microcode_load="YES"
    cpu_microcode_name="/boot/firmware/intel-ucode.bin"
    reboot

change your shell to bash (or don't):
    chsh -s /usr/local/bin/bash

mount usb devices as a normal user:
    https://docs.freebsd.org/en/books/handbook/disks/#usb-disks
    see 17.4.2. Automounting Removable Media
    # also see: https://vermaden.wordpress.com/2018/10/11/freebsd-desktop-part-17-automount-removable-media/

xorg:
    pkg install xorg firefox vscode google-fonts
    pw groupmod video -m yourusername
if xfce:
    pkg install xfce xfce4-goodies
    sysrc dbus_enable="YES"
    echo ". /usr/local/etc/xdg/xfce4/xinitrc" > ~/.xinitrc
if kde:
    https://community.kde.org/FreeBSD/Setup#Quick_start
    https://docs.freebsd.org/en_US.ISO8859-1/books/handbook/x11-wm.html

shut the system down:
    shutdown -p now

get the source tree:
    fetch http://ftp.freebsd.org/pub/FreeBSD/releases/amd64/RELEASE/src.txz
    where RELEASE is the output of freebsd-release -k
    tar -xvzf src.txz -C /

## MISC

add to /boot/loader.conf:
    acpi_ibm_load="YES"
    coretemp_load="YES"
    hw.vga.textmode=1
    kern.vt.fb.default_mode="1280x800"

add to /etc/rc.conf:
    allscreens_kbdflags="-b quiet.off"
    allscreens_flags="-f terminus-b32"
