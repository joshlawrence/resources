## -- resources -- ##

resources for wget, opendirs and converting/scripting.

wget -e robots=off -r -nc -nH --cut-dirs=3 -np "URL"

## encoding/converting/misc

replace all spaces with underscores:

find . -type f -name "*.wav" -exec rename 's/ /_/g' {} \;

replace all instances of "_-_" with a single dash:

find . -type f -name "*.wav" -exec rename 's/_-_/_/g' {} \;

upper to lower:

for i in *.wav; do mv "$i" "$(echo "$i" | tr '[A-Z]' '[a-z]')"; done

#!/bin/bash
for file in *.flv; do
	i=$(basename "$file" .flv)
	ffmpeg -i "$file" -c:a libvorbis -q:a 6 "$i.ogg"
done

#!/bin/bash
for i in *.ogg; do 
    mv "$i" "$(echo ${i%.ogg} | tr [:lower:] [:upper:]).ogg"; 
done

#!/bin/bash
for i in *.m4a; do
    ffmpeg -i "$i" -c:a libvorbis -qscale:a 5 "$i.ogg"
done

script to dump opendir page links to a file: scripts/dumpPageLinks.sh

## creating temp directories

#!/bin/bash
rand=$(openssl rand -hex 6)
mkdir -p ".$rand"/{wrk,out}

## youtube-dl options (+mpv)

youtube-dl already selects the BEST format, pass -F to see other formats.

youtube-dl [-a FILE] --restrict-filenames [--prefer-free-formats] URL

	...where FILE is a list of urls.

to extract audio only:

youtube-dl -x --audio-format mp3|vorbis|wav URL

handy stuff here: https://wiki.archlinux.org/index.php/mpv

note: https://mpv.io/manual/master/#options-ytdl

function yta() {
    mpv --ytdl-format=bestaudio ytdl://ytsearch:"$@"
}

# -- renaming -- #

https://www.gnu.org/software/bash/manual/bashref.html#Shell-Parameter-Expansion

https://www.gnu.org/software/bash/manual/bashref.html#Filename-Expansion

Here are a couple more different ways to manipulate filenames

for f in *.jpg
do
    mv "$f" "before_part${f%.*}after_part.${f##*.}"
    # OR mv "$f" "before_part$(basename "$f" ".jpg")after_part.jpg"
done
The parameter expansions in the mv command work as follows:

${f%.*} - Delete the shortest matching pattern from the end of the string contained in $f, 
in this case delete everything after and including the last dot. The single % means "shortest from the end".

${f##*.} - Delete the longest matching pattern from the beginning of the string contained in $f, 
in this case everything before and including the last dot (this includes any other dots as well). 

find all zip files, create a directory based on file name, extract the contents to the directory:

#!/bin/bash
for i in *.zip; do
    dir=${i%%.*}
    mkdir "$dir"
    unzip "$i" -d "$dir"
done