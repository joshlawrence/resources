# ~/.bash_profile

# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
	# Shell is not interactive
	return
fi

# default prompt
PS1=" \W \$ "

# don't put duplicate lines or lines starting with space in the history
# See bash(1) for more options
HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# Make bash check its window size after a process completes
shopt -s checkwinsize

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# path
PATH="$HOME/bin:$HOME/.local/bin:$PATH"

# editor
export VISUAL=vim
export EDITOR="$VISUAL"

# aliases
# quoting is HARD
alias afk='pmset displaysleepnow'
alias cleanup="find . -type f -name '.DS_Store' -print -delete"
#alias gam="$HOME/bin/gam/gam"
alias ls='ls -1G'
alias tb='nc termbin.com 9999'
alias getip='curl http://icanhazip.com'
alias upload='open https://send.firefox.com/'

# source ~/.bash_aliases if it exists
#if [ -f ~/.bash_aliases ]; then
#  source ~/.bash_aliases
#fi

# functions
timestamp () {
  date +"%F %r" | tr -d "\n" | pbcopy
}

dtree () {
  tree -h -C -L 1 "$1"
}

pman () {
  man -t "$1" | open -fa /Applications/Preview.app
}

reload () {
  unalias -a
  source "$HOME/.bash_profile"
}

genpass () {
  pwgen -N "$1" -cn -1 12
}

hide () {
  ENCFILE="${1%/}.tar.gz.enc"
  echo "Encrypting directory..."
  tar -cz "$1" | openssl enc -aes-256-cbc -e > "$ENCFILE"
  mv "$ENCFILE" ".$ENCFILE"
  rm -r "$1";
}

unhide () {
  ENCFILE="$1"
  openssl enc -aes-256-cbc -d -in "$ENCFILE" | tar xz
  rm -i "$ENCFILE";
}

# completion and sourcing
test -e "$HOME/.iterm2_shell_integration.bash" && source "$HOME/.iterm2_shell_integration.bash"
[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc'
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc'

# source ~/.bashrc if it exists
#if [ -f ~/.bashrc ]; then
#  source ~/.bashrc
#fi 
